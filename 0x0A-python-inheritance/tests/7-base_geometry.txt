>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

"""
Correct Output
"""
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented
>>> bg.integer_validator("a", 3)
>>>

"""
Error Output
"""
>>> bg.area(1)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 2 were given
>>> bg.integer_validator("a", "no")
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> bg.integer_validator("a", -10)
Traceback (most recent call last):
...
ValueError: a must be greater than 0
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator("age")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer
